apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keycloak.fullname" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: {{ .Values.keycloak.args }}
          env:
            {{- range $k, $v := .Values.keycloak.extraEnv }}
            - name: {{ $k }}
              value: "{{ $v }}"
            {{- end }}
            {{- range $k, $v := .Values.keycloak.extraEnvSecret }}
            - name: {{ $k }}
              valueFrom:
                secretKeyRef:
                  name: {{ $v.secretName }}
                  key: {{ $v.secretKey }}
            {{- end }}

            - name: KEYCLOAK_LOG_LEVEL
              value: {{ .Values.keycloak.logLevel | quote }}
            {{- if .Values.keycloak.adminUser }}
            - name: KEYCLOAK_ADMIN
              value: {{ .Values.keycloak.adminUser | quote }}
            {{- end }}
            - name: KC_PROXY
              value: {{ .Values.keycloak.proxyMode | quote }}
            - name: KC_HOSTNAME
              value: {{ .Values.keycloak.hostname | quote }}
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.keycloak.adminPasswordSecret.name }}
                  name: {{ .Values.keycloak.adminPasswordSecret.name }}
                  key: {{ .Values.keycloak.adminPasswordSecret.key }}
                {{- else }}
                  name: {{ include "keycloak.fullname" . }}-admin
                  key: password
                {{- end }}
            {{- if .Values.keycloak.database.username }}
            - name: KC_DB_USERNAME
              value: {{ .Values.keycloak.database.username | quote }}
            {{- end }}
            {{- if .Values.keycloak.database.databaseName }}
            - name: KC_DB_URL_DATABASE
              value: {{ .Values.keycloak.database.databaseName | quote }}
            {{- end }}
            {{- if .Values.keycloak.database.host }}
            - name: KC_DB_URL_HOST
              value: {{ .Values.keycloak.database.host | quote }}
            {{- end }}
            {{- if .Values.keycloak.database.properties }}
            - name: KC_DB_URL_PROPERTIES
              value: {{ .Values.keycloak.database.properties | quote }}
            {{- end }}
            {{- if .Values.keycloak.database.passwordSecret.name }}
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ tpl .Values.keycloak.database.passwordSecret.name . }}
                  key: {{ .Values.keycloak.database.passwordSecret.key }}
            {{- end }}
            {{- if .Values.ingress.tls.enabled }}
            - name: KC_HTTPS_CERTIFICATE_FILE
              value: /keycloak/certs/tls.crt
            - name: KC_HTTPS_CERTIFICATE_KEY_FILE
              value: /keycloak/certs/tls.key
            {{- end }}
            - name: KEYCLOAK_ENABLE_STATISTICS
              value: true
            - name: JAVA_OPTS_APPEND
              {{- if .Values.keycloak.clustered }}
              value: "-Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless {{ .Values.keycloak.javaOptsAppend }}"
              {{- else }}
              value: {{ .Values.keycloak.javaOptsAppend | quote }}
              {{- end }}
            {{- with .Values.keycloak.extraEnv }}
            # Extra environment variables from .Values.keycloak.extraEnv
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            {{- if .Values.tls.enabled }}
            - name: https
              containerPort: 8443
              protocol: TCP
            {{- end }}
            {{- if and (.Values.metrics.enabled) (not (eq (.Values.containerPorts.http | int) (.Values.containerPorts.metrics | int) )) }}
            - name: metrics
              containerPort: 9000
              protocol: TCP
            {{- end}}
          readinessProbe:
            httpGet:
              path: /realms/master
              {{- if .Values.ingress.tls.enabled }}
              port: 8443
              {{- else }}
              port: 8080
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.ingress.tls.enabled }}
            - name: certificates
              mountPath: /keycloak/certs
              readOnly: true
            {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        {{- if .Values.ingress.tls.enabled }}
        - name: certificates
          secret:
            secretName: {{ .Values.ingress.tls.secretName }}
            defaultMode: 420
        {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
